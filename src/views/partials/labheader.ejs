<!DOCTYPE html>
<html lang="en">

<head>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk&display=swap');
  </style>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
    integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>>_codecker</title>
  <!-- <link rel="stylesheet" href="/stylesheets/app.css"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <script src="https://code.jquery.com/jquery-1.12.4.min.js"
    integrity="sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ" crossorigin="anonymous">
  </script>
  <link href='http://fonts.googleapis.com/css?family=Roboto+Condensed' rel='stylesheet' type='text/css'>
  <script>
    (function ($) {

      $.fn.linedtextarea = function (options) {

        // Get the Options
        var opts = $.extend({}, $.fn.linedtextarea.defaults, options);


        /*
         * Helper function to make sure the line numbers are always
         * kept up to the current system
         */
        var fillOutLines = function (codeLines, h, lineNo) {
          while ((codeLines.height() - h) <= 0) {
            if (lineNo == opts.selectedLine)
              codeLines.append("<div class='lineno lineselect'>" + lineNo + "</div>");
            else
              codeLines.append("<div class='lineno'>" + lineNo + "</div>");

            lineNo++;
          }
          return lineNo;
        };


        /*
         * Iterate through each of the elements are to be applied to
         */
        return this.each(function () {
          var lineNo = 1;
          var textarea = $(this);

          /* Turn off the wrapping of as we don't want to screw up the line numbers */
          textarea.attr("wrap", "off");
          textarea.css({
            resize: 'none'
          });
          var originalTextAreaWidth = textarea.outerWidth();

          /* Wrap the text area in the elements we need */
          textarea.wrap("<div class='linedtextarea'></div>");
          var linedTextAreaDiv = textarea.parent().wrap("<div class='linedwrap' style='width:" +
            originalTextAreaWidth + "px'></div>");
          var linedWrapDiv = linedTextAreaDiv.parent();

          linedWrapDiv.prepend("<div class='lines' style='width:50px'></div>");

          var linesDiv = linedWrapDiv.find(".lines");
          linesDiv.height(textarea.height() + 6);


          /* Draw the number bar; filling it out where necessary */
          linesDiv.append("<div class='codelines'></div>");
          var codeLinesDiv = linesDiv.find(".codelines");
          lineNo = fillOutLines(codeLinesDiv, linesDiv.height(), 1);

          /* Move the textarea to the selected line */
          if (opts.selectedLine != -1 && !isNaN(opts.selectedLine)) {
            var fontSize = parseInt(textarea.height() / (lineNo - 2));
            var position = parseInt(fontSize * opts.selectedLine) - (textarea.height() / 2);
            textarea[0].scrollTop = position;
          }


          /* Set the width */
          var sidebarWidth = linesDiv.outerWidth();
          var paddingHorizontal = parseInt(linedWrapDiv.css("border-left-width")) + parseInt(linedWrapDiv.css(
            "border-right-width")) + parseInt(linedWrapDiv.css("padding-left")) + parseInt(linedWrapDiv.css(
            "padding-right"));
          var linedWrapDivNewWidth = originalTextAreaWidth - paddingHorizontal;
          var textareaNewWidth = originalTextAreaWidth - sidebarWidth - paddingHorizontal - 20;

          textarea.width(textareaNewWidth);
          linedWrapDiv.width(linedWrapDivNewWidth);



          /* React to the scroll event */
          textarea.scroll(function (tn) {
            var domTextArea = $(this)[0];
            var scrollTop = domTextArea.scrollTop;
            var clientHeight = domTextArea.clientHeight;
            codeLinesDiv.css({
              'margin-top': (-1 * scrollTop) + "px"
            });
            lineNo = fillOutLines(codeLinesDiv, scrollTop + clientHeight, lineNo);
          });


          /* Should the textarea get resized outside of our control */
          textarea.resize(function (tn) {
            var domTextArea = $(this)[0];
            linesDiv.height(domTextArea.clientHeight + 6);
          });

        });
      };

      // default options
      $.fn.linedtextarea.defaults = {
        selectedLine: -1,
        selectedClass: 'lineselect'
      };
    })(jQuery);
  </script>
  <style>
    html {
      scroll-behavior: smooth;
    }

    .linedwrap {
      border: 1px solid #c0c0c0;
      padding: 3px;
    }

    .linedtextarea {
      padding: 0px;
      margin: 0px;
    }

    .linedtextarea textarea,
    .linedwrap .codelines .lineno {
      font-size: 10pt;
      font-family: monospace;
      line-height: normal !important;
    }

    .linedtextarea textarea {
      padding-right: 0.3em;
      padding-top: 0.3em;
      border: 0;
    }

    .linedwrap .lines {
      margin-top: 0px;
      width: 50px;
      float: left;
      overflow: hidden;
      border-right: 1px solid #c0c0c0;
      margin-right: 10px;
    }

    .linedwrap .codelines {
      padding-top: 5px;
    }

    .linedwrap .codelines .lineno {
      color: #AAAAAA;
      padding-right: 0.5em;
      padding-top: 0.0em;
      text-align: right;
      white-space: nowrap;
    }

    .linedwrap .codelines .lineselect {
      color: red;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-dark bg-dark">
    <div class="container">
      <a class="navbar-brand" href="#">>_codecker</a>
    </div>
  </nav>